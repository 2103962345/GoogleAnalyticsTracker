{"name":"Googleanalyticstracker","body":"# GoogleAnalyticsTracker\r\nGoogleAnalyticsTracker - A C# library for tracking Google Analytics\r\n\r\n## Like this project?\r\n[<img src=\"https://www.paypal.com/en_US/i/btn/btn_donate_SM.gif\" border=\"0\">](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=C8GLSG8E33NA4) via [PayPal](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=C8GLSG8E33NA4).\r\n\r\n## What can it be used for?\r\nGoogleAnalyticsTracker was created to have a means of tracking specific URL's directly from C#. For example, when creating an API using the ASP.NET MVC framework, GoogleAnalyticsTracker enables you to track usage of the API by calling directly into Google Analytics.\r\n\r\n## Get it on NuGet!\r\n\r\n    Install-Package GoogleAnalyticsTracker\r\n\t\r\n## Example usage\r\nUsing GoogleAnalyticsTracker is very straightforward. In your code, add the following structure wherever you want to track page views:\r\n\r\n    using (Tracker tracker = new Tracker(\"UA-XXXXXX-XX\", \"www.example.org\"))\r\n    {\r\n        tracker.TrackPageView(\"My API - Create\", \"api/create\");\r\n        tracker.TrackPageView(\"MY API - List\", \"api/list\");\r\n    }\r\n\r\nOr without a using block:\r\n\r\n    Tracker tracker = new Tracker(\"UA-XXXXXX-XX\", \"www.example.org\");\r\n    tracker.TrackPageView(\"My API - Create\", \"api/create\");\r\n\r\nA number of extension methods are available which use the provided HttpContext as the source for URL and user propertires:\r\n\r\n    Tracker tracker = new Tracker(\"UA-XXXXXX-XX\", \"www.example.org\");\r\n    tracker.TrackPageView(HttpContext, \"My API - Create\");\r\n\r\nFinally, an ActionFilter for use with ASP.NET MVC is available:\r\n\r\n\t[ActionTracking(\"UA-XXXXXX-XX\", \"www.example.org\")]\r\n\tpublic class ApiController\r\n\t    : Controller\r\n\t{\r\n\t    public JsonResult Create()\r\n\t    {\r\n\t        return Json(true);\r\n\t    }\r\n\t}\r\n\r\nThis filter can also be applied as a global action filter, optionally filtering the requests to log:\r\n\r\n\tpublic class MvcApplication : System.Web.HttpApplication\r\n\t{\r\n\t    public static void RegisterGlobalFilters(GlobalFilterCollection filters)\r\n\t    {\r\n\t        filters.Add(new HandleErrorAttribute());\r\n\t        filters.Add(new ActionTrackingAttribute(\r\n\t            \"UA-XXXXXX-XX\", \"www.example.org\",\r\n\t            action => action.ControllerDescriptor.ControllerName == \"Api\")\r\n\t        );\r\n\t    }\r\n\t}\r\n\r\n## License\r\n[MS-PL License](https://github.com/maartenba/GoogleAnalyticsTracker/blob/master/LICENSE.md)\r\n\r\n## Building the source\r\nAfter cloning the repository, run build.cmd. A folder named \"Build\" will be created and populated with:\r\n\r\n- Assemblies\r\n- PDB files\r\n- NuGet package\r\n\r\n## Who uses GoogleAnalyticsTracker?\r\n- [MyGet](http://www.myget.org)","tagline":"GoogleAnalyticsTracker - A C# library for tracking Google Analytics","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}